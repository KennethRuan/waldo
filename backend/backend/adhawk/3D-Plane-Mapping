import numpy as np

# Define your three non-collinear points
point1 = np.array([x1, y1, z1])
point2 = np.array([x2, y2, z2])
point3 = np.array([x3, y3, z3])

# Calculate two vectors on the plane
vector1 = point2 - point1
vector2 = point3 - point1

# Calculate the normal vector of the plane using the cross product
normal_vector = np.cross(vector1, vector2)

# The equation of the plane is in the form ax + by + cz + d = 0, so we need to find d
# You can use any of the three points to find d
a,b,c = normal_vector[0], normal_vector[1], normal_vector[2]
d = -np.dot(normal_vector, point1)

# The equation of the plane is now determined
print(f"The equation of the plane is {normal_vector[0]}x + {normal_vector[1]}y + {normal_vector[2]}z + {d} = 0")

def find_closest_point_on_plane(pt):
    # Define the coordinates of the fourth point
    point4 = np.array(pt)

    # Calculate the distance from the fourth point to the global plane
    distance = abs(a * point4[0] + b * point4[1] + c * point4[2] + d) / np.sqrt(a**2 + b**2 + c**2)

    # Calculate the point on the plane closest to the fourth point
    closest_point_on_plane = point4 - distance * np.array([a, b, c])

    return closest_point_on_plane

